# –§—É–Ω–∫—Ü–∏—è filter() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
# –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å —Ç–µ–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö
# —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ True.
data =  [12, 85 ,9, 16, 175]
# data = [x for x in range(10)]
res = list(filter(lambda x: x % 10 == 5, data))
print(res) # [0, 2, 4, 6, 8]
# –ö–∞–∫ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è filter()? –í—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è
# –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
# lambda x: x % 2 == 0
# –¢–æ –µ—Å—Ç—å –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 2 –¥–∞—é—Ç –≤ –æ—Å—Ç–∞—Ç–∫–µ 0.
# –¢–µ–º —Å–∞–º—ã–º –º—ã –∏—â–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞. –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–≤ –Ω–∞—à–∏
# –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫, —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ list(), –º—ã —Å –í–∞–º–∏ –º–æ–∂–µ–º –Ω–∞–±–ª—é–¥–∞—Ç—å
# —Ç–∞–∫–æ–π –∫—Ä–∞—Å–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç üôÇ
# –ö–∞–∫ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –ª—É—á—à–µ, –∏—Å–ø–æ–ª—å–∑—É—è filter()?
# üí° filter() –ø–æ–∑–≤–æ–ª–∏—Ç –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ where, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø–∏—Å–∞–ª–∏ —Ä–∞–Ω–µ–µ
# data = '1 2 3 5 8 15 23 38'.split()
# res = map(int, data)
# res = filter(lambda x: x % 2 == 0, res)
# res = list(map(lambda x: (x, x ** 2), res))
# print(res)